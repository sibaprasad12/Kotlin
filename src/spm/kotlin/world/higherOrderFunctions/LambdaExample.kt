package spm.kotlin.world.higherOrderFunctions/** *Lambdas Expressions are essentially anonymous functions that we can treat as values â€“ we can, * for example, pass them as arguments to functions, return them, or do any other thing we could do with a normal object. * *(Int, Int) -> Int = { a,b -> a+b } * * (Int, Int) is input parameter type * -> Int is the output type * {a,b -> a+b} -> a,b is just names of the parameter we pass and do the operation * * (Int, Int) -> Unit * In this case, there are 2 input and the output is unit. */fun main() {    val square : (Int) -> Int = { value -> value * value }    val result = square(5)    println("Result of Square is $result")    val sum : (Int, Int) -> Int = { a,b -> a+b }    val sumResult = sum(3,4)    println("Result of Sum is $sumResult")    val sum1 : (Int, Int) -> Unit = { a,b -> println("SUM is ${a+b}") }    sum1(3,4) // print sum without returning value    println("Result of Sum is $sumResult")}